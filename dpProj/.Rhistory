ChickWeight %>%
group_by(Diet) %>%
plot_ly(x=~Time, y=~weight) %>%
ChickWeight %>%
group_by(Diet) %>%
plot_ly(x=~Time, y=~weight)
ChickWeight %>%
group_by(Diet) %>%
plot_ly(x=~Time, y=~weight)
ChickWeight %>%
group_by(Diet) %>%
plot_ly(x=~Time, y=~weight, color = ~Chick)
ChickWeight %>%
group_by(Diet) %>%
plot_ly(x=~Time, y=~weight, color = ~Chick, type = 'scatter', mode = 'lines')
ChickWeight %>%
group_by(Diet) %>%
plot_ly(x=~Time, y=~weight, color = ~Chick, type = 'scatter', mode = 'lines') %>%
add_lines(alpha = 0.3)
for(i in 1:4)
{
dietsub[i] <- subset(ChickWeight, Diet == i)
}
for(i in 1:4)
{
dietsub[i] <- data.frame(subset(ChickWeight, Diet == i))
}
subset(ChickWeight, Diet == i)
dietsub <- data.frame
for(i in 1:4)
{
dietsub[i] <- subset(ChickWeight, Diet == i)$Weight
}
for(i in 1:4)
{
dietsub[i] <- subset(ChickWeight, Diet == i)$weight
}
dietsub <- data.matrix
for(i in 1:4)
{
dietsub[i] <- subset(ChickWeight, Diet == i)$weight
}
subset(ChickWeight, Diet == i)$weight
dietsub <- matrix(NA, ncol = 4)
for(i in 1:4)
{
dietsub[i] <- subset(ChickWeight, Diet == i)$weight
}
View(dietsub)
subset(ChickWeight, Diet == i, select= weight)
dietsub <- matrix(NA, ncol = 4)
for(i in 1:4)
{
dietsub[,i] <- subset(ChickWeight, Diet == i)$weight
}
dietsub <- list()
for(i in 1:4)
{
dietsub[i] <- subset(ChickWeight, Diet == i)$weight
}
dietsub <- list()
for(i in 1:4)
{
dietsub[[i]] <- subset(ChickWeight, Diet == i)$weight
}
diesub[1]
dietsub[1]
dietsub <- list()
for(i in 1:4)
{
dietsub[[i]] <- subset(ChickWeight, Diet == i)$weight
}
plot_ly(ChickWeight, x = ~Time, y=~weight, color = ~Chick) %>%
add_trace(y = ~dietsub[1], name = "A", mode = 'lines', visible = F) %>%
add_trace(y = ~dietsub[2], name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~dietsub[3], name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~dietsub[4], name = "B", mode = 'lines', visible = F) %>%
layout(
title = "Weight versus age of chicks on different diets",
updatemenus = list(
list(
y = 0.7,
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE, FALSE, FALSE, FALSE)),
label = "Number of cylinders"),
list(method = "restyle",
args = list("visible", list(FALSE, TRUE, FALSE, FALSE)),
label = "Displacement (cu.in.)"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, TRUE, FALSE)),
label = "Gross horsepower"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, FALSE, TRUE)),
label = "Weight (1000 lbs)")
)
)
)
)
D1 <- subset(ChickWeight, Diet == 1)
D2 <- subset(ChickWeight, Diet == 2)
D3 <- subset(ChickWeight, Diet == 3)
D4 <- subset(ChickWeight, Diet == 4)
plot_ly(ChickWeight, x = ~Time) %>%
add_trace(y = ~D1$weight, name = "A", mode = 'lines', visible = F) %>%
add_trace(y = ~D2$weight, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~D3$weight, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~D4$weight, name = "B", mode = 'lines', visible = F) %>%
layout(
title = "Weight versus age of chicks on different diets",
updatemenus = list(
list(
y = 0.7,
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE, FALSE, FALSE, FALSE)),
label = "Number of cylinders"),
list(method = "restyle",
args = list("visible", list(FALSE, TRUE, FALSE, FALSE)),
label = "Displacement (cu.in.)"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, TRUE, FALSE)),
label = "Gross horsepower"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, FALSE, TRUE)),
label = "Weight (1000 lbs)")
)
)
)
)
table(ChickWeight$Time,ChickWeight$Diet)
table(ChickWeight$Chick,ChickWeight$Diet)
table(ChickWeight$Chick,ChickWeight$Time)
group_by(ChickWeight, Time)%>%
summarise(mean(weight))
for(i in 1:4)
{
dietsub[,i] <- subset(ChickWeight, Diet == i)%>%
group_by(ChickWeight, Time)%>%
summarise(mean(weight))
}
for(i in 1:4)
{
dietsub[,i] <- subset(ChickWeight, Diet == i)%>%
group_by(Time)%>%
summarise(mean(weight))
}
D1 <- subset(ChickWeight, Diet == 1)%>%
group_by(Time)%>%
summarise(mean(weight))
D2 <- subset(ChickWeight, Diet == 2)%>%
group_by(Time)%>%
summarise(mean(weight))
D3 <- subset(ChickWeight, Diet == 3)%>%
group_by(Time)%>%
summarise(mean(weight))
D4 <- subset(ChickWeight, Diet == 4)%>%
group_by(Time)%>%
summarise(mean(weight))
D1 <- subset(ChickWeight, Diet == 1)%>%
group_by(Time)%>%
summarise(wt = mean(weight))
D1 <- subset(ChickWeight, Diet == 1)%>%
group_by(Time)%>%
summarise(wt = mean(weight))
D2 <- subset(ChickWeight, Diet == 2)%>%
group_by(Time)%>%
summarise(wt = mean(weight))
D3 <- subset(ChickWeight, Diet == 3)%>%
group_by(Time)%>%
summarise(wt = mean(weight))
D4 <- subset(ChickWeight, Diet == 4)%>%
group_by(Time)%>%
summarise(wt = mean(weight))
plot_ly(ChickWeight, x = ~Time) %>%
add_trace(y = ~D1$wt, name = "A", mode = 'lines', visible = F) %>%
add_trace(y = ~D2$wt, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~D3$wt, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~D4$wt, name = "B", mode = 'lines', visible = F) %>%
layout(
title = "Weight versus age of chicks on different diets",
updatemenus = list(
list(
y = 0.7,
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE, FALSE, FALSE, FALSE)),
label = "Number of cylinders"),
list(method = "restyle",
args = list("visible", list(FALSE, TRUE, FALSE, FALSE)),
label = "Displacement (cu.in.)"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, TRUE, FALSE)),
label = "Gross horsepower"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, FALSE, TRUE)),
label = "Weight (1000 lbs)")
)
)
)
)
D1 <- subset(ChickWeight, Diet == 1)%>%
group_by(Time)%>%
summarise(wt1 = mean(weight))
D2 <- subset(ChickWeight, Diet == 2)%>%
group_by(Time)%>%
summarise(wt2 = mean(weight))
D3 <- subset(ChickWeight, Diet == 3)%>%
group_by(Time)%>%
summarise(wt3 = mean(weight))
D4 <- subset(ChickWeight, Diet == 4)%>%
group_by(Time)%>%
summarise(wt4 = mean(weight))
ckwt <- cbind(D1, D2$wt2, D3$wt3, D4$wt4)
ckwt <- cbind(D1, wt2 = D2$wt2, wt3 = D3$wt3, wt4 = D4$wt4)
plot_ly(ckwt, x = ~Time) %>%
add_trace(y = ~D1$wt1, name = "A", mode = 'lines', visible = F) %>%
add_trace(y = ~D2$wt2, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~D3$wt3, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~D4$wt4, name = "B", mode = 'lines', visible = F) %>%
layout(
title = "Weight versus age of chicks on different diets",
updatemenus = list(
list(
y = 0.7,
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE, FALSE, FALSE, FALSE)),
label = "Number of cylinders"),
list(method = "restyle",
args = list("visible", list(FALSE, TRUE, FALSE, FALSE)),
label = "Displacement (cu.in.)"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, TRUE, FALSE)),
label = "Gross horsepower"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, FALSE, TRUE)),
label = "Weight (1000 lbs)")
)
)
)
)
plot_ly(ckwt, x = ~Time) %>%
add_trace(y = ~wt1, name = "A", mode = 'lines', visible = F) %>%
add_trace(y = ~wt2, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt3, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt4, name = "B", mode = 'lines', visible = F) %>%
layout(
title = "Weight versus age of chicks on different diets",
updatemenus = list(
list(
y = 0.7,
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE, FALSE, FALSE, FALSE)),
label = "Number of cylinders"),
list(method = "restyle",
args = list("visible", list(FALSE, TRUE, FALSE, FALSE)),
label = "Displacement (cu.in.)"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, TRUE, FALSE)),
label = "Gross horsepower"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, FALSE, TRUE)),
label = "Weight (1000 lbs)")
)
)
)
)
plot_ly(ckwt, x = ~Time, y = ~wt1) %>%
add_trace(y = ~wt1, name = "A", mode = 'lines', visible = F) %>%
add_trace(y = ~wt2, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt3, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt4, name = "B", mode = 'lines', visible = F) %>%
layout(
title = "Weight versus age of chicks on different diets",
updatemenus = list(
list(
y = 0.7,
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE, FALSE, FALSE, FALSE)),
label = "Number of cylinders"),
list(method = "restyle",
args = list("visible", list(FALSE, TRUE, FALSE, FALSE)),
label = "Displacement (cu.in.)"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, TRUE, FALSE)),
label = "Gross horsepower"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, FALSE, TRUE)),
label = "Weight (1000 lbs)")
)
)
)
)
plot_ly(ckwt, x = ~Time) %>%
add_trace(y = ~wt1, name = "A", mode = 'lines', visible = T) %>%
add_trace(y = ~wt2, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt3, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt4, name = "B", mode = 'lines', visible = F)
plot_ly(ckwt, x = ~Time, y = ~wt1, type = 'scatter', mode = 'lines')
plot_ly(ckwt, x = ~Time, y = ~wt1, type = 'scatter', mode = 'lines') %>%
add_trace(y = ~wt1, name = "A", mode = 'lines', visible = T) %>%
add_trace(y = ~wt2, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt3, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt4, name = "B", mode = 'lines', visible = F)
plot_ly(ckwt, x = ~Time, type = 'scatter', mode = 'lines') %>%
add_trace(y = ~wt1, name = "A", mode = 'lines', visible = T) %>%
add_trace(y = ~wt2, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt3, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt4, name = "B", mode = 'lines', visible = F)
plot_ly(ckwt, x = ~Time, type = 'scatter', mode = 'lines') %>%
add_trace(y = ~wt1, name = "A", mode = 'lines', visible = T) %>%
add_trace(y = ~wt2, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt3, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt4, name = "B", mode = 'lines', visible = F) %>%
layout(
title = "Weight versus age of chicks on different diets",
updatemenus = list(
list(
y = 0.7,
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE, FALSE, FALSE, FALSE)),
label = "Number of cylinders"),
list(method = "restyle",
args = list("visible", list(FALSE, TRUE, FALSE, FALSE)),
label = "Displacement (cu.in.)"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, TRUE, FALSE)),
label = "Gross horsepower"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, FALSE, TRUE)),
label = "Weight (1000 lbs)")
)
)
)
)
plot_ly(ckwt, x = ~Time, type = 'scatter', mode = 'lines', visible = F) %>%
add_trace(y = ~wt1, name = "A", mode = 'lines', visible = T) %>%
add_trace(y = ~wt2, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt3, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt4, name = "B", mode = 'lines', visible = F) %>%
layout(
title = "Weight versus age of chicks on different diets",
xaxis = list(title = 'Time', range  = c(0,1)),
yaxis = list(title = 'Weight (gm)'), range = c(0, 1),
updatemenus = list(
list(
type = "buttons",
y = 0.8,
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE, FALSE, FALSE, FALSE)),
label = "Number of cylinders"),
list(method = "restyle",
args = list("visible", list(FALSE, TRUE, FALSE, FALSE)),
label = "Displacement (cu.in.)"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, TRUE, FALSE)),
label = "Gross horsepower"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, FALSE, TRUE)),
label = "Weight (1000 lbs)"),
list(method = "restyle",
args = list("visible", list(TRUE, TRUE, TRUE, TRUE)),
label = "All")
)
)
)
)
plot_ly(ckwt, x = ~Time, type = 'scatter', mode = 'lines', visible = F) %>%
add_trace(y = ~wt1, name = "A", mode = 'lines', visible = T) %>%
add_trace(y = ~wt2, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt3, name = "B", mode = 'lines', visible = F) %>%
add_trace(y = ~wt4, name = "B", mode = 'lines', visible = F) %>%
layout(
title = "Weight versus age of chicks on different diets",
xaxis = list(title = 'Time', domain = c(0,1)),
yaxis = list(title = 'Weight (gm)', range = c(0,300)),
updatemenus = list(
list(
type = "buttons",
direction = "right",
xanchor = 'center',
yanchor = "top",
pad = list('r'= 0, 't'= 10, 'b' = 10),
x = 0.5,
y = 1.17,
buttons = list(
list(method = "restyle",
args = list("visible", list(TRUE, FALSE, FALSE, FALSE)),
label = "Number of cylinders"),
list(method = "restyle",
args = list("visible", list(FALSE, TRUE, FALSE, FALSE)),
label = "Displacement (cu.in.)"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, TRUE, FALSE)),
label = "Gross horsepower"),
list(method = "restyle",
args = list("visible", list(FALSE, FALSE, FALSE, TRUE)),
label = "Weight (1000 lbs)"),
list(method = "restyle",
args = list("visible", list(TRUE, TRUE, TRUE, TRUE)),
label = "All")
)
)
)
)
plot_ly(ChickWeight, x = ~Time, y = ~weight, color = Diet)
plot_ly(ChickWeight, x = ~Time, y = ~weight, color = ~Diet)
plot_ly(ChickWeight, x = ~Time, y = ~weight, color = ~Diet) %>%
add_lines(y = mean(~weight))
plot_ly(ChickWeight, x = ~Time, y = ~weight, color = ~Diet) %>%
add_lines(y = ~ckwt$wt1)
install.packages("shiny")
shiny::runApp('Coursera/dataprod/Proj')
runApp('Coursera/dataprod/Proj')
runApp('Coursera/dataprod/Proj')
runApp('Coursera/dataprod/Proj')
runApp('Coursera/dataprod/Proj')
runApp('Coursera/dataprod/Proj')
runApp('Coursera/dataprod/Proj')
runApp('Coursera/dataprod/Proj')
runApp('Coursera/dataprod/Proj')
runApp('Coursera/dataprod/Proj')
runApp('Coursera/dataprod/Proj')
install.packages("miniUI")
runApp('Coursera/dataprod/Proj')
shiny::runApp('Coursera/dpProj/dpProj')
shiny::runApp('Coursera/dataprod/Proj')
shiny::runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
chick.lm <- lm(weight˜Time, data=ChickWeight)
summary(chick.lm)
plot(chick.lm)
data("ChickWeight")
chick.lm <- lm(weight˜Time, data=ChickWeight)
summary(chick.lm)
plot(chick.lm)
chick.lm <- lm(weight ~ Time, data=ChickWeight)
summary(chick.lm)
plot(chick.lm)
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
View(ChickWeight)
View(ChickWeight)
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
summary(ChickWeight$weight)
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
runApp('Coursera/dpProj/dpProj')
shiny::runApp('Coursera/dpProj/dpProj')
